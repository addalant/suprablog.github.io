{"version":3,"sources":["firebase.js","pages/Home.js","pages/CreatePost.js","pages/Login.js","App.js","reportWebVitals.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","getFirestore","auth","getAuth","provider","GoogleAuthProvider","Home","_ref","isAuth","_useState","useState","_useState2","Object","slicedToArray","postLists","setPostList","postsCollectionRef","collection","useEffect","_ref2","asyncToGenerator","regenerator_default","a","mark","_callee","data","wrap","_context","prev","next","getDocs","sent","docs","map","doc","objectSpread","id","date","stop","apply","this","arguments","getPosts","deletePost","_ref3","_callee2","postDoc","_context2","deleteDoc","_x","react_default","createElement","className","post","title","postDate","author","currentUser","uid","onClick","postText","name","CreatePost","setTitlte","_useState3","_useState4","setpostText","_useState5","_useState6","navigate","useNavigate","createPost","addDoc","Date","toLocaleString","displayName","placeholder","onChange","event","target","value","concat","Login","setIsAuth","signInWithPopup","then","result","localStorage","setItem","App","getItem","react_router_dom","to","Fragment","signOut","clear","window","location","pathname","react_router","path","element","pages_Home","pages_Login","pages_CreatePost","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.161ca1e9.chunk.js","sourcesContent":["// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { getAuth, GoogleAuthProvider } from \"firebase/auth\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDGbDJQzjQnhpEkLJLL3p4AfZCuCIf1Dd4\",\n  authDomain: \"blogsupra-c0280.firebaseapp.com\",\n  projectId: \"blogsupra-c0280\",\n  storageBucket: \"blogsupra-c0280.appspot.com\",\n  messagingSenderId: \"782467825326\",\n  appId: \"1:782467825326:web:e323ca6ad09c24eaa9373f\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nexport const db = getFirestore(app);\nexport const auth = getAuth(app);\nexport const provider = new GoogleAuthProvider();\n","\nimport React, { useEffect, useState } from \"react\";\nimport { getDocs, collection, deleteDoc, doc } from \"firebase/firestore\";\nimport { auth, db } from \"../firebase\";\n\n\nfunction Home({ isAuth }) {\n  const [postLists, setPostList] = useState([]);\n  const postsCollectionRef = collection(db, \"posts\");\n\n  useEffect(() => {\n    const getPosts = async () => {\n      const data = await getDocs(postsCollectionRef);\n      setPostList(data.docs.map((doc) => ({ ...doc.data(), id: doc.id, date: doc.date })));\n    };\n    getPosts();\n  });\n  const deletePost = async (id) => {\n    const postDoc = doc(db, \"posts\", id);\n    await deleteDoc(postDoc);\n  };\n  return (\n    <div className=\"homePage\">\n      {postLists.map((post) => {\n        return (\n          <div className=\"post\">\n            <div className=\"postHeader\">\n              <div className=\"title\">\n                <h1> {post.title}</h1>\n                <h2> {post.postDate.date}</h2>\n\n              </div>\n              <div className=\"deletePost\">\n                {isAuth && post.author.id === auth.currentUser.uid && (\n                  <button\n                    onClick={() => {\n                      deletePost(post.id);\n                    }}\n                  >\n                    {\" \"}\n                    &#128465;\n                  </button>\n                )}\n              </div>\n              <div className = \"editPost\">\n                {isAuth && post.author.id === auth.currentUser.uid && (\n                  <button\n                    onClick={() => {\n\n                    }}\n                  > &#9998; \n                  </button>\n                )}\n              </div>\n            </div>\n            <div className=\"postTextContainer\"> {post.postText} </div>\n            <h3>@{post.author.name}</h3>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\nexport default Home;\n","import React, {useState, useEffect} from 'react'\nimport { addDoc, collection } from \"firebase/firestore\";\nimport { db, auth } from \"../firebase\";\nimport { useNavigate } from \"react-router-dom\";\n\n\nfunction CreatePost({isAuth}) {\n  const [title,setTitlte] = useState (\"\");\n  const [postText,setpostText] = useState (\"\");\n  const [postDate,setpostDate] = useState (\"\");\n\n  const postsCollectionRef = collection(db, \"posts\");\n  let navigate = useNavigate();\n\n  const createPost = async () => {\n      await addDoc(postsCollectionRef, {\n        title,\n        postText,\n        postDate: {date: new Date().toLocaleString()},\n        author: { name: auth.currentUser.displayName, id: auth.currentUser.uid },\n      });\n      navigate(\"/\");\n    };\n\n  useEffect(() => {\n    if (!isAuth) {\n      navigate(\"/login\");\n    }\n  }, []);\n\n\n  return (\n     <div className=\"createPostPage\">\n       <div className=\"cpContainer\">\n         <h1>Create A Post</h1>\n         <div className=\"inputGp\">\n           <label> Title:</label>\n           <input\n             placeholder=\"Title...\"\n             onChange = {(event) => {\n               setTitlte(event.target.value);\n             }}\n            />\n         </div>\n         <div className=\"inputGp\">\n           <label> Post:</label>\n           <textarea\n             placeholder=\"Post...\"\n             onChange = {(event) => {\n               setpostText(event.target.value);\n             }}\n            />\n         </div>\n         <div className=\"inputGp\">\n           <label> DATE:</label>\n           <span className=\"xyz\">\n              {`${new Date().toLocaleString()}`}\n           </span>\n         </div>\n         <button onClick= {createPost}>Submit Post </button>\n       </div>\n     </div>\n   );\n }\n\n export default CreatePost;\n","import React from \"react\";\nimport { auth, provider } from \"../firebase\";\nimport { signInWithPopup } from \"firebase/auth\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction Login({ setIsAuth }) {\n  let navigate = useNavigate();\n\n  const signInWithGoogle = () => {\n    signInWithPopup(auth, provider).then((result) => {\n      localStorage.setItem(\"isAuth\", true);\n      setIsAuth(true);\n      navigate(\"/\");\n    });\n  };\n\n  return (\n    <div className=\"loginPage\">\n      <p>Sign up With Google to Continue</p>\n      <button className=\"login-with-google-btn\" onClick={signInWithGoogle}>\n        Sign up with Google\n      </button>\n    </div>\n  );\n}\n\nexport default Login;\n","import './App.css';\nimport React from 'react';\nimport {BrowserRouter as Router, Routes, Route, Link }from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport CreatePost from \"./pages/CreatePost\";\nimport Login from \"./pages/Login\";\nimport {useState} from \"react\";\nimport {signOut} from \"firebase/auth\";\nimport {auth} from \"./firebase\";\nfunction App() {\n  const [isAuth, setIsAuth] = useState(localStorage.getItem(\"isAuth\"));\n\n  const signUserOut = () => {\n    signOut(auth).then(() => {\n      localStorage.clear();\n      setIsAuth(false);\n      window.location.pathname = \"/login\";\n    });\n  };\n  return(\n    <Router>\n      <nav>\n      <Link to=\"/\"> Home </Link>\n\n       {!isAuth ? (\n         <Link to=\"/login\"> Login </Link>\n       ) : (\n         <>\n           <Link to=\"/CreatePost\"> Create Post </Link>\n           <button onClick={signUserOut}> Log Out</button>\n         </>\n       )}\n      </nav>\n      <Routes>\n        <Route path = \"/\" element = {<Home isAuth= {isAuth}/>} />\n        <Route path = \"/Login\" element = {<Login setIsAuth = {setIsAuth}/>} />\n        <Route path = \"/createpost\" element = {<CreatePost isAuth= {isAuth} />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}